<?php

/**
 * Class FactoryX_Queryfier_Block_Page_Html_Head
 */
class FactoryX_Queryfier_Block_Page_Html_Head extends FactoryX_Queryfier_Block_Page_Html_Head_Abstract
{
    /**
     * @param $format
     * @param array $staticItems
     * @param array $skinItems
     * @param null $mergeCallback
     * @param bool|false $minify
     * @return string
     */
    protected function &_prepareStaticAndSkinElements($format, array $staticItems, array $skinItems, $mergeCallback = null, $minify = false )
    {
        if ((string)Mage::getConfig()->getModuleConfig('GT_Speed')->active == 'true' && (Mage::getStoreConfigFlag( 'gtspeed/cssjs/min_css' ) || Mage::getStoreConfigFlag( 'gtspeed/cssjs/min_js' )))
        {
            return parent::_prepareStaticAndSkinElements($format, $staticItems, $skinItems, $mergeCallback, $minify);
        }
        else
        {
            $designPackage = Mage::getDesign();
            $baseJsUrl = Mage::getBaseUrl('js');
            $items = array();
            if ($mergeCallback && !is_callable($mergeCallback)) {
                $mergeCallback = null;
            }

            // get static files from the js folder, no need in lookups
            foreach ($staticItems as $params => $rows) {
                foreach ($rows as $name) {
                    $items[$params][] = $mergeCallback ? Mage::getBaseDir() . DS . 'js' . DS . $name : $baseJsUrl . $name;
                }
            }

            // lookup each file basing on current theme configuration
            foreach ($skinItems as $params => $rows) {
                foreach ($rows as $name) {
                    $items[$params][] = $mergeCallback ? $designPackage->getFilename($name, array('_type' => 'skin'))
                        : $designPackage->getSkinUrl($name, array());
                }
            }

            $html = '';
            foreach ($items as $params => $rows) {
                // attempt to merge
                $mergedUrl = false;
                if ($mergeCallback) {
                    $mergedUrl = call_user_func($mergeCallback, $rows);
                }
                // render elements
                $params = trim($params);
                $params = $params ? ' ' . $params : '';
                if ($mergedUrl) {
                    if ($this->isUrlSuffixEnabled()) {
                        if ($this->isUrlSuffixAutoGenerated()) {
                            $suffix = $this->_getFileModificationTimeFromUrl($mergedUrl);
                        } else {
                            $suffix = $this->getUrlSuffix();
                        }
                        $mergedUrl .= '?q=' . urlencode($suffix);
                    }
                    $html .= sprintf($format, $mergedUrl, $params);
                } else {
                    foreach ($rows as $src) {
                        if ($this->isUrlSuffixEnabled()) {
                            if ($this->isUrlSuffixAutoGenerated()) {
                                $suffix = $this->_getFileModificationTimeFromUrl($src);
                            } else {
                                $suffix = $this->getUrlSuffix();
                            }
                            $src .= '?q=' . urlencode($suffix);
                        }
                        $html .= sprintf($format, $src, $params);
                    }
                }
            }
            return $html;
        }
    }

    /**
     * @param $url
     * @return int|mixed
     */
    protected function _getFileModificationTimeFromUrl($url)
    {
        $baseUrl = preg_replace('#https?://#', '', Mage::getBaseUrl());
        $url = preg_replace('#https?://#', '', $url);
        $file = Mage::getBaseDir() . DS . trim(str_replace($baseUrl, '', $url), DS);

        return file_exists($file) ? filemtime($file) : $this->getUrlSuffix();
    }

    /**
     * @return mixed
     */
    public function isUrlSuffixEnabled()
    {
        return Mage::getStoreConfigFlag('queryfier/suffix_js_css/enable');
    }

    /**
     * @return mixed
     */
    public function isUrlSuffixAutoGenerated()
    {
        return Mage::getStoreConfigFlag('queryfier/suffix_js_css/auto');
    }

    /**
     * @return mixed
     */
    public function getUrlSuffix()
    {
        return Mage::getStoreConfig('queryfier/suffix_js_css/suffix');
    }
}