<?php

/**
 * @category   Unirgy
 * @package    Unirgy_StoreLocator
 * @author     Boris (Moshe) Gurevich <moshe@unirgy.com> // Modifications by Factory X Team <raphael@factoryx.com.au>
 */

$query = convertUrlQuery(parse_url($this->helper('core/url')->getCurrentUrl(), PHP_URL_QUERY));

$state = (array_key_exists('state', $query) && !empty($query['state']))?$query['state']:"vic";

$_showMap = Mage::getStoreConfig('ustorelocator/general/show_map');
$_showSearch = Mage::getStoreConfig('ustorelocator/general/show_search');
$_defaultLocation = Mage::getStoreConfig('ustorelocator/general/default_location');
$_defaultRadius = Mage::getStoreConfig('ustorelocator/general/default_radius');
$_minZoom = Mage::getStoreConfig('ustorelocator/general/min_zoom');
$_scale_icon = Mage::getStoreConfig('ustorelocator/general/scale_icon');
$apiKey = Mage::getStoreConfig('ustorelocator/general/api_key');
$apiVersion = Mage::getStoreConfig('ustorelocator/general/api_version');
$multipleResults = Mage::getStoreConfig('ustorelocator/general/multiple_results');

$collection = Mage::getModel('ustorelocator/location')->getCollection()
	->addFieldToFilter('region', array('eq' => $state))
	->addFieldToFilter('store_code', array('neq' => 'H00'))
	->setOrder('title', 'ASC');

// foreach($collection as $location){
// 	echo $location->latitude;
// 	echo $location->longitude;
// 	var_dump($location);
// 	break;
// }
$this->setCollection($collection);

$_units = Mage::getStoreConfig('ustorelocator/general/distance_units');
$_searchRadiuses = explode(',',Mage::getStoreConfig('ustorelocator/general/search_radius_options'));
$_locale = Mage::getStoreConfig('general/locale/code');
$isCurrentlySecure = Mage::app()->getStore()->isCurrentlySecure();
$mapUrl = $isCurrentlySecure ? 'https' : 'http';
$mapUrl .= '://maps.googleapis.com/maps/api/js?';
if($apiVersion){
    $mapUrl .= "v={$apiVersion}&";
}

if($apiKey){
    $mapUrl .= "key={$apiKey}&";
}
$mapUrl .= "sensor=false";

$mapHeight = 450;

// Array of States
$states = array(
	"act" 	=> 	"Australian Capital Territory",
	"nsw" 	=> 	"New South Wales",
	"nt" 	=> 	"Northern Territory",
	"qld" 	=> 	"Queensland",
	"sa" 	=> 	"South Australia",
	"tas" 	=> 	"Tasmania",
	"vic" 	=> 	"Victoria",
	"wa" 	=> 	"Western Australia",
	"nz" 	=> 	"New Zealand"
);
?>
<div id="store-regions">
<ul class="store-location-states">
<?php
$info = parse_url(Mage::helper('core/url')->getCurrentUrl());
$allLocs = Mage::getModel('ustorelocator/location')->getCollection()
	->addFieldToFilter('store_code', array('neq' => 'H00'))
	->setOrder('title', 'ASC');
foreach ($states as $value => $state_name) {
    // check it has a location
    $found = false;
    foreach($allLocs as $location) {
        //echo sprintf("%s==%s<br/>", $value, $location->region, print_r($location, true));
        if (preg_match("/$value/i", $location->region)) {
            $found = true;
            break;
        }
    }
    if ($found) { 
        echo sprintf("<li state=\"%s\" class=\"%s\"><a href=\"%s?state=%s\">%s</a></li>",
            $value,
            ($value == $state)?'active':'',
            $info['path'],
            $value,
            $state_name
        );
    }
}
?>
</ul>
</div>
<?php
	if (count($collection)>0) {
?>
        <div id="map-canvas" style="height:500px; margin-bottom:10px;"></div>		

		<ul class="store-location-stores">
<?php 		foreach($collection as $location) { ?>
                <li>
					<div>
						<h4 id="marker-<?php echo $location->location_id; ?>"><?php echo $location->title; ?></h4>
						<p><i class="fa fa-phone"></i>&nbsp;<a href="tel:<?php echo $location->phone; ?>"><?php echo $location->phone; ?></a></p>
						<p class='notes'><?php echo $location->notes; ?></p>
					</div>
				</li>
            <?php } ?>			

		</ul>

<?php
} else {
?>
    <h3 style="margin: 200px auto;text-align: center;color: #727272;">We currently don't have stores in this area yet.</h3>
<?php
}
?>
<script type="text/javascript"
  src="https://maps.googleapis.com/maps/api/js?key=<?php echo $apiKey; ?>&sensor=false">
</script>
<script type="text/javascript">
  var infowindow = new google.maps.InfoWindow();
  function initialize() {
  	var styles = [
	  {
	    featureType: "road",
	    elementType: "geometry",
	    stylers: [
	      { lightness: 100 },
	      { visibility: "simplified" }
	    ]
	  }
	];	

    var mapOptions = {
      center: new google.maps.LatLng(-37.811419, 144.963498),
      zoom: 15,
      styles: styles
    };
    var map = new google.maps.Map(document.getElementById("map-canvas"),mapOptions);
    var bounds = new google.maps.LatLngBounds();
    //google.maps.event.addDomListener(window, 'load', initialize);   
    
<?php
	foreach($collection as $location) {
	    if ($location->latitude == 0 || $location->longitude == 0) {
	        continue;
	    }
?>
		bounds.extend(new google.maps.LatLng(<?php echo $location->latitude; ?>, <?php echo $location->longitude; ?>));
		var marker = new google.maps.Marker({
			    position: new google.maps.LatLng(<?php echo $location->latitude; ?>, <?php echo $location->longitude; ?>),
			    title:"<?php echo $location->title; ?>",
			    map: map
			});		
	  	attachSecretMessage(marker, <?php echo $location->location_id; ?>,'<b><?php echo htmlentities($location->title); ?></b></p><?php echo htmlentities($location->address); ?></p><?php echo htmlentities($location->phone); ?></p><?php echo preg_replace("/\r\n|\r|\n/",'<br/>',$location->notes); ?>');
<?php			
	}
?>	
	<?php if (count($collection) > 1){ ?>
		map.fitBounds(bounds);
	<?php }else{ 
		foreach($collection as $location){
	?>
		map.setCenter(new google.maps.LatLng(<?php echo $location->latitude; ?>, <?php echo $location->longitude; ?>));
	<?php } } ?>
  }

  function attachSecretMessage(marker, id, title) {
	  google.maps.event.addListener(marker, 'click', function() {
	  	infowindow.setContent(title);
	    infowindow.open(marker.get('map'), marker);
	  });
	  google.maps.event.addDomListener(document.getElementById("marker-"+id), 'click', function() {
	  	marker.get('map').panTo(marker.getPosition());
	  	marker.get('map').setZoom(15);
	  	new google.maps.event.trigger( marker, 'click' );	  	
        return false;
	  });
  }
  
  initialize();


</script>


 

</div>


<?php
/**
 * Returns the url query as associative array
 *
 * @param    string    query
 * @return    array    params
 */
function convertUrlQuery($query) {
    $params = array();
	// check if there is any params
	if (strpos($query, '=')) {
	    $queryParts = explode('&', $query);
	    foreach ($queryParts as $param) {
	        $item = explode('=', $param);
	        $params[$item[0]] = $item[1];
	    }
	}   
    return $params;
}
?>
