<?php
/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>

<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<script type="text/javascript">
	function MagicZoomResponsive() {
		var oldRel = jQuery(".MagicZoom").prop('rel');
		if (jQuery(window).width() < 767) {
			jQuery(".MagicZoom").prop('rel',oldRel+';disable-zoom:true');
			MagicZoom.refresh();
		}else{
			jQuery(".MagicZoom").prop('rel',oldRel+';disable-zoom:false');
			MagicZoom.refresh();
		}	
	}
	
	function MagicZoomImageResizeResponsive() {
		
		if (jQuery(window).width() <= 320) {
			jQuery(".MagicZoom img").attr("width","300px");
			jQuery(".MagicZoom img").attr("height","339px");			
			MagicZoom.refresh();
		}else if (jQuery(window).width() > 320 &&jQuery(window).width() <= 480) {			
			jQuery(".MagicZoom").attr("width","460px");
			jQuery(".MagicZoom img").attr("width","100%");
			jQuery(".MagicZoom img").attr("height","auto");
			MagicZoom.refresh();
		} else {		

			
		}	
	}
	
	jQuery(document).ready(function() {				
		MagicZoomResponsive();
		MagicZoomImageResizeResponsive();
	});
	
	jQuery( window ).resize(function() {
		MagicZoomResponsive();
		MagicZoomImageResizeResponsive();
	});

</script>
<?php
$message = $this->getMessagesBlock()->getGroupedHtml();
if (strlen($message) > 0) {
    echo "<div id='messages_product_view'>" . $message . "</div>";
}

$productName = $_helper->productAttribute($_product, $_product->getName(), 'name');
$productAvailability = false;
if ($_product->getResource()->getAttribute('available_date') != null) {
    $adate = strtotime($_product->getAvailableDate());
    $today = Mage::getModel('core/date')->timestamp(time());
    // can be ordered yet?
    if ($today < $adate) {
        $productAvailability = sprintf("Arrives %s", date("F Y", $adate));
    }
}
?>

<div id="messages_product_view" style=" background-color:green"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>

<div class="product-view" id="modalgrab">
    <div class="product-essential">
        <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if ($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?> class="form">
            <div class="no-display">
                <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
                <input type="hidden" name="related_product" id="related-products-field" value="" />
            </div>
			
            <div class="row">
				<div class="span5" id="product-media">
						<?php echo $this->getChildHtml('media') ?>
				</div>	

				<div class="span7" id="product-shop">
					<div class="product-name">
						<h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
					</div>
					<div id="priceandsqu">
						<?php echo $this->getTierPriceHtml() ?>
						<?php echo $this->getChildHtml('product_type_data') ?>
						<?php /* Use Factory X SKU Code instead <span class="product-sku">Item #: <?php echo nl2br($_product->getSku()) ?></span> */ ?>
						<span class="product-sku"><?php echo $this->__("Item #: %s", $this->getProduct()->getSku()) ?></span>

						<?php echo $this->getChildHtml('extrahint') ?>

						<?php
						if ($productAvailability) {
							echo sprintf("<div class=\"product-availability\">%s</div>", $productAvailability);
						}
						?>
					</div>									
	

					<!-- Email to friend Functionality - Removed for princesshighway theme. -->
					<?php /* if ($this->canEmailToFriend()): ?>
							<p class="email-friend"><a href="<?php echo $this->helper('catalog/product')->getEmailToFriendUrl($_product) ?>"><?php echo $this->__('Email to a Friend') ?></a></p>
					<?php endif; */ ?>					

					<div id="producttabs">
						<div class="tabbable">
							<?php echo $this->getChildHtml('info_easytabs'); ?>
						</div>		   
					</div>					

				

					<div  id="productpurchase">
						<?php
						$catCollection = $_product->getCategoryCollection();
						// export this collection to array so we could iterate on it's elements
						$cats = $catCollection->exportToArray();
						?>

						<?php if (!$_product->isSaleable()): ?>
							<div>
								<p class="availability out-of-stock"><span>Sorry, this item is currently out of stock.</span></p>
							</div>
						<?php endif; ?>

						<div style="display:none">
							<?php echo $this->getPriceHtml($_product, false, '_clone'); ?>                    
						</div>

						<div class="product-view-delimiter"></div>		        	

						<?php if ($_product->getTypeId() == "ugiftcert"): ?>
							<?php echo $this->getChildHtml('product_type_data') ?>
						<?php endif; ?>

						<?php if ($_product->isSaleable() && $this->canEmailToFriend()): // && $this->hasOptions()): ?>

							<?php echo $this->getChildChildHtml('container2', '', true, true) ?>

							<div class="add-to-cart">
								<?php /* echo $this->getChildHtml('addtocart') */ ?>
							</div>
						<?php endif; ?>

						<?php /* if ($this->canEmailToFriend()): ?>                                                                            
							<ul id="information-links">
								<li><a href="/contacts?id=<?php echo $this->getProduct()->getId(); ?>"><?php echo $this->__('Need Help ?'); ?></a></li>
								<li><?php echo $this->getReviewsSummaryHtml($_product, false, true) ?></li>
								<?php // echo $this->getChildHtml('addto') ?>
							</ul>

						<?php endif; */ ?>

						<?php echo $this->getChildHtml('other'); ?>
						<?php if ($_product->isSaleable() && $this->hasOptions()): ?>
							<?php echo $this->getChildChildHtml('container1', '', true, true) ?>
						<?php endif; ?>

					</div>
					
					<div class="text-align-right" id="productsocial">
						<div class="fb-like" data-href="http://www.facebook.com/princesshighwayclothing" data-width="450" data-layout="button_count" data-show-faces="true" data-send="false"></div>

						<?php echo $this->getChildHtml('alert_urls') ?>
					</div>
				</div>
            </div>
        </form>
	</div>
</div>	

<div id="suggestivetabs">
	<div class="tabbable">
		<ul id="myTab" class="nav nav-tabs">
			<li class="active"><a href="#wearitwith" data-toggle="tab">Wear It With</a></li>
			<li><a href="#reviews" data-toggle="tab">Product Reviews</a></li>
			<?php /* <li><a href="#otherspurchased" data-toggle="tab">Other People Purchased</a></li> */ ?>
		</ul>

		<div class="tab-content">
			<div class="tab-pane active" id="wearitwith">
				<?php echo $this->getChildHtml('upsell_products') ?>
			</div>
			<div class="tab-pane" id="reviews">
				<!--<?php echo $this->getReviewsSummaryHtml($_product, false, true) ?>-->
				<?php echo $this->getChildHtml('product_review') ?>
			</div>

			<?php /*
			<div class="tab-pane " id="otherspurchased">
				<p>Section coming soon - Currently Showing Product Additional Data</p>
				<?php echo $this->getChildHtml('product_additional_data') ?>    
			</div>
			*/ ?>
		</div>
	</div>		        		              						 
</div>
		
<script type="text/javascript">

//<![CDATA[
var productAddToCartForm = new VarienForm('product_addtocart_form');
productAddToCartForm.submit = function() {
	if (this.validator.validate()) {
		this.form.submit();
	}
}.bind(productAddToCartForm);
// CONFIGURABLE SELECTOR FUNCTIONS (used in magiczoom/configurable.phtml)
function colorSelected(id, value, product_image_src, product_big_image_src, color_div_id, product_id)
{
	// Disable all the size
	jQuery("#size-container").children().not("#size-chart").each(
			function()
			{
				jQuery(this).addClass('size-disabled');
			}
	);
	// Update the product image
	jQuery(".MagicZoom img").attr("src", product_image_src);
	// Update the big zoomed image
	jQuery(".MagicZoomBigImageCont img").attr("src", product_big_image_src);
	// Set the value of the attribute in the hidden field
	document.getElementById(id).value = value;
	// Unselect the previous swatch (CSS)
	if (jQuery('.swatch-selected'))
	{
		jQuery('.swatch-selected').removeClass('swatch-selected');
	}
	// Remove the previous available div
	if (jQuery("#available"))
	{
		jQuery("#available").remove();
	}
	// Apply CSS selection on the swatch
	jQuery("#" + color_div_id).addClass('swatch-selected');
	// Add the name of the color to the label
	if (jQuery('#selected-color'))
	{
		jQuery('#selected-color').remove();
	}
	var newColorLabelDiv = "<span id='selected-color'> " + color_div_id + "</span>";
	jQuery('#color-selector-label').append(newColorLabelDiv);
	// Refresh sizes and price through the ProductRefresh module
	jQuery.ajax({
		url: "/productrefresh/index",
		dataType: 'json',
		type: 'get',
		data: "product_id=" + product_id + "&color=" + value,
		success: function(data) {
			// If everything has worked
			if (data.status == "SUCCESS")
			{
				jQuery("#unavailable").remove();
				// We go through every size box
				jQuery("#size-container").children().not("#size-chart").each(
						function()
						{
							// Removing all the existing disabled class
							if (jQuery(this).hasClass('size-disabled'))
								jQuery(this).removeClass('size-disabled');
							// Adding the disabled class if this one is not available
							if (jQuery.inArray(jQuery(this).attr("id"), data.sizes) == -1)
							{
								jQuery("#attribute131").val("");
								jQuery(this).addClass('size-disabled');
								if (jQuery(this).hasClass('size-selected'))
								{
									jQuery(this).removeClass('size-selected');
								}
							}
						}
				);

				if (data.sizes.length == 0)
				{
					jQuery("#colour-available-alert").append("<div id='unavailable' style='margin-bottom:10px'>Sorry, this color is currently out of stock.</div>");
					// Unselect the previous size (CSS)
					if (jQuery('.size-selected'))
					{
						jQuery('.size-selected').removeClass('size-selected');
					}
				}

				// We calculate the new price
				var totalPrice = 0.00;
				totalPrice += parseFloat(jsonConf.basePrice);
				// Based on the returned values
				if (data.prices[value] > 0) {
					totalPrice += parseFloat(data.prices[value]);
				}

				// We are changing the price if the new price is different
				// Or the special price if there is one							
				if (jQuery(".special-price #product-price-" + product_id + "_clone").html() != "$" + totalPrice.toFixed(2) && jQuery(".special-price #product-price-" + product_id + "_clone").html() != null)
				{
					jQuery(".special-price #product-price-" + product_id + "_clone").replaceWith("<span id='product-price-" + product_id + "_clone' class='price'>$" + totalPrice.toFixed(2) + "</span>");
					jQuery(".special-price #product-price-" + product_id + "_clone").effect("pulsate", {times: 3}, 700);
				}
				else if (jQuery("#product-price-" + product_id + "_clone .price").html() != "$" + totalPrice.toFixed(2))
				{
					jQuery("#product-price-" + product_id + "_clone .price").replaceWith("<span class='price'>$" + totalPrice.toFixed(2) + "</span>");
					jQuery("#product-price-" + product_id + "_clone .price").effect("pulsate", {times: 3}, 700);
				}
			}
		}
	});
}

// Corresponding function for the size
function sizeSelected(id, value, size_div_id)
{
	// We check if the div chosen is available or not
	if (jQuery("#" + size_div_id).hasClass('size-disabled'))
		return;
	// Set the value of the attribute in the hidden field
	document.getElementById(id).value = value;
	// Unselect the previous size (CSS)
	if (jQuery('.size-selected'))
	{
		jQuery('.size-selected').removeClass('size-selected');
	}
	// Apply CSS selection on the size
	jQuery("#" + size_div_id).addClass('size-selected');

	<?php if ($_product->getShowAvailableUnits()): ?>
		// Base URL in case we're using a subfolder
		var base_url = '';
		// Handle the HTTPS protocol
		if (location.protocol == 'https:')
		{
			base_url = "<?php echo Mage::getUrl('', array('_secure' => true)); ?>";
		}
		else
		{
			base_url = '<?php echo Mage::getBaseUrl() ?>';
		}
		jQuery.ajax({
			url: base_url + "productrefresh/index/unitsPerSize",
			dataType: 'json',
			type: 'get',
			data: "product_id=" +<?php echo $_product->getId() ?> + "&size=" + size_div_id,
			success: function(data) {
				// If everything has worked
				if (data.status == "SUCCESS")
				{
					if (jQuery("#available"))
					{
						jQuery("#available").remove();
					}
					if (data.units)
					{
						var qtyStockShowLimit = <?php echo Mage::getStoreConfig('cataloginventory/options/show_products_left_limit'); ?>;
						if (data.units <= qtyStockShowLimit)
						{
							jQuery("#size-available-alert").append("<div id='available'>Only " + data.units + " left in this size.</div>");
						}
					}
				}
			}
		});
	<?php endif; ?>
}
//]]>
</script>

